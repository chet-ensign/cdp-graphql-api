package org.oasis_open.contextserver.graphql;

import graphql.schema.*;
import graphql.servlet.GraphQLQueryProvider;
import org.osgi.service.component.annotations.Component;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

import static graphql.Scalars.GraphQLID;
import static graphql.Scalars.GraphQLString;
import static graphql.schema.GraphQLFieldDefinition.newFieldDefinition;
import static graphql.schema.GraphQLObjectType.newObject;

/**
 * Created by loom on 20.04.17.
 */
@Component(
        name="CXSEventGraphQLProvider",
        immediate=true
)
public class CXSEventGraphQLProvider implements GraphQLQueryProvider {

    private static GraphQLObjectType CXSGraphQLEvent = newObject()
            .name("Event")
            .description("An event is generated by user interacting with the Context Server")
            .field(newFieldDefinition()
                    .type(GraphQLID)
                    .name("id")
                    .staticValue("eventId")
            )
            .field(newFieldDefinition()
                    .type(GraphQLString)
                    .name("eventType")
                    .staticValue("pageView")
            ).build();

    public Collection<GraphQLFieldDefinition> getQueries() {
        List<GraphQLFieldDefinition> fieldDefinitions = new ArrayList<GraphQLFieldDefinition>();
        fieldDefinitions.add(
                newFieldDefinition()
                        .name("events")
                        .type(new GraphQLList(CXSGraphQLEvent))
                        .dataFetcher(new DataFetcher() {
                            public Object get(DataFetchingEnvironment environment) {
                                return null;
                            }
                        })
                        .build());
        return fieldDefinitions;
    }
}
